/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.bioscomputacion.Formularios;

import static ar.com.bioscomputacion.Formularios.FrmPrincipal.deskPrincipal;
import ar.com.bioscomputacion.Funciones.Productor;
import java.awt.Dimension;
import java.sql.Connection;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Caco
 */
public class FrmGestionProductores extends javax.swing.JInternalFrame {

    int fila = -1;
    //private conexion mysql = new conexion(); 
    //private Connection cn = mysql.conectar();
    private String sSQL = ""; //Sentencia SQL
    static String llamadaDesde;
    String codigoProductor;
    
    /**
     * Creates new form FrmGenerico
     */
    public FrmGestionProductores() {
        initComponents();
        mostrarProductores("");
        ocultarColumnas();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rSPanelShadow1 = new rojeru_san.RSPanelShadow();
        rdbrRegistrar3 = new rojeru_san.RSButtonRiple();
        jPanel1 = new javax.swing.JPanel();
        rSPanelShadow2 = new rojeru_san.RSPanelShadow();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        tProductores = tProductores = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false; //Disallow the editing of any cell
            }
        };
        jLabel4 = new javax.swing.JLabel();
        tfBuscarProductor = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        rdbrEliminar = new rojeru_san.RSButtonRiple();
        rsbrSalir = new rojeru_san.RSButtonRiple();
        rdbrModificar = new rojeru_san.RSButtonRiple();
        rdbrDetalle = new rojeru_san.RSButtonRiple();

        rdbrRegistrar3.setBackground(new java.awt.Color(47, 110, 164));
        rdbrRegistrar3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar/com/bioscomputacion/Iconos/editar.png"))); // NOI18N
        rdbrRegistrar3.setText("VER DETALLE");
        rdbrRegistrar3.setFont(new java.awt.Font("Roboto Bold", 3, 14)); // NOI18N
        rdbrRegistrar3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbrRegistrar3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("GESTION DE PRODUCTORES - CAM HONEY BROTHERS");
        setToolTipText("");
        setPreferredSize(new java.awt.Dimension(700, 550));

        jPanel1.setBackground(new java.awt.Color(51, 84, 111));

        rSPanelShadow2.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Arial", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("PRODUCTORES REGISTRADOS EN EL SISTEMA");

        tProductores.setBackground(new java.awt.Color(36, 33, 33));
        tProductores.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        tProductores.setForeground(new java.awt.Color(207, 207, 207));
        tProductores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tProductores.setOpaque(true);
        tProductores.setRowHeight(20);
        tProductores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tProductoresMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tProductores);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("BUSCAR POR NOMBRE:");

        tfBuscarProductor.setBackground(new java.awt.Color(51, 84, 111));
        tfBuscarProductor.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        tfBuscarProductor.setForeground(new java.awt.Color(255, 255, 255));
        tfBuscarProductor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tfBuscarProductorKeyReleased(evt);
            }
        });

        rdbrEliminar.setBackground(new java.awt.Color(47, 110, 164));
        rdbrEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar/com/bioscomputacion/Iconos/quitar.png"))); // NOI18N
        rdbrEliminar.setText("ELIMINAR");
        rdbrEliminar.setFont(new java.awt.Font("Roboto Bold", 3, 14)); // NOI18N
        rdbrEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbrEliminarActionPerformed(evt);
            }
        });

        rsbrSalir.setBackground(new java.awt.Color(0, 0, 0));
        rsbrSalir.setText("SALIR");
        rsbrSalir.setFont(new java.awt.Font("Roboto Bold", 3, 18)); // NOI18N
        rsbrSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rsbrSalirActionPerformed(evt);
            }
        });

        rdbrModificar.setBackground(new java.awt.Color(47, 110, 164));
        rdbrModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar/com/bioscomputacion/Iconos/editar.png"))); // NOI18N
        rdbrModificar.setText("EDITAR DATOS");
        rdbrModificar.setFont(new java.awt.Font("Roboto Bold", 3, 14)); // NOI18N
        rdbrModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbrModificarActionPerformed(evt);
            }
        });

        rdbrDetalle.setBackground(new java.awt.Color(47, 110, 164));
        rdbrDetalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ar/com/bioscomputacion/Iconos/editar.png"))); // NOI18N
        rdbrDetalle.setText("CONSULTA");
        rdbrDetalle.setFont(new java.awt.Font("Roboto Bold", 3, 14)); // NOI18N
        rdbrDetalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbrDetalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rSPanelShadow2Layout = new javax.swing.GroupLayout(rSPanelShadow2);
        rSPanelShadow2.setLayout(rSPanelShadow2Layout);
        rSPanelShadow2Layout.setHorizontalGroup(
            rSPanelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelShadow2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rSPanelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane4)
                    .addComponent(jSeparator2)
                    .addComponent(rsbrSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(rSPanelShadow2Layout.createSequentialGroup()
                        .addGroup(rSPanelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfBuscarProductor, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addGroup(rSPanelShadow2Layout.createSequentialGroup()
                                .addComponent(rdbrModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdbrEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(rdbrDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        rSPanelShadow2Layout.setVerticalGroup(
            rSPanelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rSPanelShadow2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfBuscarProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(rSPanelShadow2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbrModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbrEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rdbrDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(rsbrSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelShadow2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rSPanelShadow2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void inicializar() {
        
        //distinguimos desde donde se llama el form de gestion
        if (llamadaDesde == "gestion"){
            
            rdbrModificar.setVisible(true);
            rdbrEliminar.setVisible(true);
            rdbrDetalle.setVisible(true);
            
            //this.setTitle("CondorCom Technology - Gestion de Clientes");
            //lTitulo.setText("LISTADO DE CLIENTES REGISTRADOS:");
            
        }
        
        /*
        if (llamadaDesde == "presupuesto"){
            
            bModificar.setVisible(false);
            bEliminar.setVisible(false);
            bDetalle.setVisible(false);
            bConsultarCtaCte.setVisible(false);
            bConsultarComprobantes.setVisible(false);
            bAceptar.setVisible(true);
            this.setTitle("CondorCom Technology - Clientes disponibles para asociar al comprobante");
            lTitulo.setText("SELECCIONE UN CLIENTE PARA PODER REALIZAR LA CONFECCION DEL PRESUPUESTO:");

            rbActivos.setVisible(false);
            rbInactivos.setVisible(false);
            lClientes.setVisible(false);
            bReconectar.setVisible(false);
            
        }
        
        if (llamadaDesde == "factura"){
            
            bModificar.setVisible(false);
            bEliminar.setVisible(false);
            bDetalle.setVisible(false);
            bConsultarCtaCte.setVisible(false);
            bConsultarComprobantes.setVisible(false);
            bAceptar.setVisible(true);
            this.setTitle("CondorCom Technology - Clientes disponibles para asociar al comprobante");
            lTitulo.setText("SELECCIONE UN CLIENTE PARA PODER REALIZAR LA CONFECCION DE LA FACTURA:");
            
            rbActivos.setVisible(false);
            rbInactivos.setVisible(false);
            lClientes.setVisible(false);
            bReconectar.setVisible(false);
            
        }
        
        if (llamadaDesde == "credito"){
            
            bModificar.setVisible(false);
            bEliminar.setVisible(false);
            bDetalle.setVisible(false);
            bConsultarCtaCte.setVisible(false);
            bConsultarComprobantes.setVisible(false);
            bAceptar.setVisible(true);
            this.setTitle("CondorCom Technology - Clientes disponibles para asociar al comprobante");
            lTitulo.setText("SELECCIONE UN CLIENTE PARA PODER REALIZAR LA CONFECCION DE LA NOTA DE CREDITO:");

            rbActivos.setVisible(false);
            rbInactivos.setVisible(false);
            lClientes.setVisible(false);
            bReconectar.setVisible(false);
            
        }
        
        if (llamadaDesde == "debito"){
            
            bModificar.setVisible(false);
            bEliminar.setVisible(false);
            bDetalle.setVisible(false);
            bConsultarCtaCte.setVisible(false);
            bConsultarComprobantes.setVisible(false);
            bAceptar.setVisible(true);
            this.setTitle("CondorCom Technology - Clientes disponibles para asociar al comprobante");
            lTitulo.setText("SELECCIONE UN CLIENTE PARA PODER REALIZAR LA CONFECCION DE LA NOTA DE DEBITO:");
            
            rbActivos.setVisible(false);
            rbInactivos.setVisible(false);
            lClientes.setVisible(false);
            bReconectar.setVisible(false);

        }
        */
        
        //mostrarProductores("");
        //ocultarColumnas();
        tfBuscarProductor.setText("");
        tfBuscarProductor.requestFocus();
        
}

    public static void mostrarProductores(String buscar) {
        
        try {
            
            //se crea un objeto Jtabla llamado "modelo"
            DefaultTableModel modelo;
            //se crea un objeto Fcliente llamado "funcion"
            Productor productor = new Productor();
            //en el onjeto jtabla "modelo" almaceno la tabla resultado de la funcion mostrarClientes del objeto "funcion" del tipo Fcliente
            modelo = productor.listarProductores(buscar);
            //en el objeto tProveedores del tipo jTtable almaceno el objeto del mismo tipo llamado "modelo"
            tProductores.setModel(modelo);

        } catch (Exception e) {
            
            JOptionPane.showMessageDialog(null, e);
            
        }
        
    }
    
    public static void ocultarColumnas() {

        /*tProductores.getColumnModel().getColumn(0).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(0).setMinWidth(0);
        tProductores.getColumnModel().getColumn(0).setPreferredWidth(0);*/

        /*tProductores.getColumnModel().getColumn(1).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(1).setMinWidth(0);
        tProductores.getColumnModel().getColumn(1).setPreferredWidth(0);*/

        tProductores.getColumnModel().getColumn(2).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(2).setMinWidth(0);
        tProductores.getColumnModel().getColumn(2).setPreferredWidth(0);

        
        tProductores.getColumnModel().getColumn(3).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(3).setMinWidth(0);
        tProductores.getColumnModel().getColumn(3).setPreferredWidth(0);
        
        /*tProductores.getColumnModel().getColumn(4).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(4).setMinWidth(0);
        tProductores.getColumnModel().getColumn(4).setPreferredWidth(0);*/
        
        /*tProductores.getColumnModel().getColumn(5).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(5).setMinWidth(0);
        tProductores.getColumnModel().getColumn(5).setPreferredWidth(0);*/
        
        /*tProductores.getColumnModel().getColumn(6).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(6).setMinWidth(0);
        tProductores.getColumnModel().getColumn(6).setPreferredWidth(0);*/
        
        tProductores.getColumnModel().getColumn(7).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(7).setMinWidth(0);
        tProductores.getColumnModel().getColumn(7).setPreferredWidth(0);
        
        tProductores.getColumnModel().getColumn(8).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(8).setMinWidth(0);
        tProductores.getColumnModel().getColumn(8).setPreferredWidth(0);
        
        tProductores.getColumnModel().getColumn(9).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(9).setMinWidth(0);
        tProductores.getColumnModel().getColumn(9).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(10).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(10).setMinWidth(0);
        tProductores.getColumnModel().getColumn(10).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(11).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(11).setMinWidth(0);
        tProductores.getColumnModel().getColumn(11).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(12).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(12).setMinWidth(0);
        tProductores.getColumnModel().getColumn(12).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(13).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(13).setMinWidth(0);
        tProductores.getColumnModel().getColumn(13).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(14).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(14).setMinWidth(0);
        tProductores.getColumnModel().getColumn(14).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(15).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(15).setMinWidth(0);
        tProductores.getColumnModel().getColumn(15).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(16).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(16).setMinWidth(0);
        tProductores.getColumnModel().getColumn(16).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(17).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(17).setMinWidth(0);
        tProductores.getColumnModel().getColumn(17).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(18).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(18).setMinWidth(0);
        tProductores.getColumnModel().getColumn(18).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(19).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(19).setMinWidth(0);
        tProductores.getColumnModel().getColumn(19).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(20).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(20).setMinWidth(0);
        tProductores.getColumnModel().getColumn(20).setPreferredWidth(0);

        tProductores.getColumnModel().getColumn(21).setMaxWidth(0);
        tProductores.getColumnModel().getColumn(21).setMinWidth(0);
        tProductores.getColumnModel().getColumn(21).setPreferredWidth(0);

        DefaultTableCellRenderer cellRender1 = new DefaultTableCellRenderer();
        DefaultTableCellRenderer cellRender2 = new DefaultTableCellRenderer();
        DefaultTableCellRenderer cellRender3 = new DefaultTableCellRenderer();
        DefaultTableCellRenderer cellRender4 = new DefaultTableCellRenderer();
        DefaultTableCellRenderer cellRender5 = new DefaultTableCellRenderer();
        
        cellRender1.setHorizontalAlignment(SwingConstants.CENTER);
        tProductores.getColumnModel().getColumn(0).setCellRenderer(cellRender1);   
        cellRender2.setHorizontalAlignment(SwingConstants.LEFT);
        tProductores.getColumnModel().getColumn(1).setCellRenderer(cellRender2);   
        cellRender3.setHorizontalAlignment(SwingConstants.LEFT);
        tProductores.getColumnModel().getColumn(4).setCellRenderer(cellRender3);   
        cellRender4.setHorizontalAlignment(SwingConstants.LEFT);
        tProductores.getColumnModel().getColumn(5).setCellRenderer(cellRender4);   
        cellRender5.setHorizontalAlignment(SwingConstants.LEFT);
        tProductores.getColumnModel().getColumn(6).setCellRenderer(cellRender5);
        
        ((DefaultTableCellRenderer) tProductores.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(SwingConstants.CENTER);
        
    }

    private void tProductoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tProductoresMouseClicked

        fila = tProductores.rowAtPoint(evt.getPoint());
        codigoProductor = tProductores.getValueAt(fila, 0).toString();

    }//GEN-LAST:event_tProductoresMouseClicked

    private void rdbrEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbrEliminarActionPerformed

        // ELIMINACION DE PRODUCTOR
 
        if (fila == -1) {
            
            JOptionPane.showMessageDialog(null, "Por favor seleccione el productor que desea dar de baja.", "BAJA DE PRODUCTOR", JOptionPane.INFORMATION_MESSAGE);
            
        }
        else{
            
            if(JOptionPane.showConfirmDialog(null, "Seguro desea dar de baja el productor?", "BAJA DE PRODUCTOR", JOptionPane.OK_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE) == 0){
                
                Productor productor = new Productor();
                
                if(productor.eliminar(Integer.parseInt(tProductores.getValueAt(fila, 0).toString()))){
                    
                    JOptionPane.showMessageDialog(null, "El productor ha sido dado de baja exitosamente.", "BAJA DE PRODUCTOR", JOptionPane.INFORMATION_MESSAGE);
                    //para refrescar la grilla y visualizar los cambios
                    
                }
                else{
                    
                    JOptionPane.showMessageDialog(null, "Ocurrió un error al intentardar de baja el productor.", "BAJA DE PRODUCTOR", JOptionPane.ERROR_MESSAGE);
                    
                }

                mostrarProductores("");
                ocultarColumnas();
                fila = -1;
                
            }
            else{
                
                JOptionPane.showMessageDialog(null, "Se ha cancelado la eliminacion del productor.", "BAJA DE PRODUCTOR", JOptionPane.INFORMATION_MESSAGE);
                
            }
            
        }
        
    }//GEN-LAST:event_rdbrEliminarActionPerformed

    private void rsbrSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rsbrSalirActionPerformed

        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_rsbrSalirActionPerformed

    private void rdbrModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbrModificarActionPerformed

        // MODIFICACION DE LOS DATOS DEL PRODUCTOR
        if (fila == -1) {
            
            JOptionPane.showMessageDialog(null, "Por favor seleccione el productor cuyos datos desea modificar.", "MODIFICACION DE PRODUCTOR", JOptionPane.INFORMATION_MESSAGE);
            
        }
        else{
            
            FrmModificacionProductor form = new FrmModificacionProductor();

            deskPrincipal.add(form);
            Dimension desktopSize = deskPrincipal.getSize();
            Dimension FrameSize = form.getSize();

            form.setLocation((desktopSize.width - FrameSize.width) / 2, (desktopSize.height - FrameSize.height) / 2);
            form.setVisible(true);
            form.setClosable(true);
            form.setIconifiable(false);
            
            //llevo el codigo del productor seleccionado
            form.codigoProductor = Integer.parseInt(tProductores.getValueAt(fila, 0).toString());
            form.tfNombre.setText(tProductores.getValueAt(fila, 1).toString());
            form.tfDocumento.setText(tProductores.getValueAt(fila, 2).toString());
            
            //combo nacionalidad
            //no hacer nada, es por defecto "ARGENTINA" para todos los productores
            
            //combos provincia y localidad
            if (tProductores.getValueAt(fila, 4).toString().length() == 0)
            {
                
                //el productor fue cargado sin una provincia
                form.cbEstadoProvincia.setSelectedIndex(0);
                form.cbLocalidad.setSelectedIndex(0);
                form.cbLocalidad.setEnabled(false);
                
            }
            else
            {
                
                //el productor fue cargado con una provincia
                form.cbEstadoProvincia.setSelectedItem(tProductores.getValueAt(fila, 4));
                
                if (tProductores.getValueAt(fila, 5).toString().length() == 0)
                {
                    
                    //el productor fue cargado sin una localidad
                    form.cbLocalidad.setSelectedIndex(0);
                    form.cbLocalidad.setEnabled(true);
                    
                }
                else
                {
                    
                    //el productor fue cargado con una localidad
                    form.cbLocalidad.setSelectedItem(tProductores.getValueAt(fila, 5));
                    form.cbLocalidad.setEnabled(true);
                    
                }
                
            }
            
            
            form.tfDomicilio.setText(tProductores.getValueAt(fila, 6).toString());
            form.tfTelefono.setText(tProductores.getValueAt(fila, 7).toString());
            form.tfCorreo.setText(tProductores.getValueAt(fila, 8).toString());
            form.tfNombreFantasia.setText(tProductores.getValueAt(fila, 12).toString());
            form.tfRazonSocial.setText(tProductores.getValueAt(fila, 13).toString());
            
            //combos condicion frente al iva
            if (tProductores.getValueAt(fila, 14).toString().length() == 0)
            {
                
                //el productor fue cargado sin una condicion frente al iva
                form.cbCondicionIVA.setSelectedIndex(0);
                
            }
            else{
            
                //el productor fue cargado con una condicion frente al iva
                form.cbCondicionIVA.setSelectedItem(tProductores.getValueAt(fila, 14));
                
            }
            
            
            form.tfCuit.setText(tProductores.getValueAt(fila, 15).toString());
            form.tfDomicilioFiscal.setText(tProductores.getValueAt(fila, 16).toString());
            form.tfFechaVentaMiel1.setText(tProductores.getValueAt(fila, 9).toString());
            form.tfFechaVentaMiel2.setText(tProductores.getValueAt(fila, 10).toString());
            form.tfFechaVentaMiel3.setText(tProductores.getValueAt(fila, 11).toString());
            form.tfCantidadColmenas.setText(tProductores.getValueAt(fila, 18).toString());
            
            
            form.tfUbicacionColmenas.setText(tProductores.getValueAt(fila, 19).toString());
 
            //combo floracion
            if (tProductores.getValueAt(fila, 20).toString().length() == 0)
            {
                
                //el productor fue cargado sin una floracion
                form.cbFloracion.setSelectedIndex(0);
                
            }
            else{
            
                //el productor fue cargado con una floracion
                form.cbFloracion.setSelectedItem(tProductores.getValueAt(fila, 20));
                
            }

            //combo cura
            if (tProductores.getValueAt(fila, 21).toString().length() == 0)
            {
                
                //el productor fue cargado sin una cura
                form.cbCuraMiel.setSelectedIndex(0);
                
            }
            else{
            
                //el productor fue cargado con una cura
                form.cbCuraMiel.setSelectedItem(tProductores.getValueAt(fila, 21));
                
            }
            
            
        }

    }//GEN-LAST:event_rdbrModificarActionPerformed

    private void rdbrRegistrar3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbrRegistrar3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rdbrRegistrar3ActionPerformed

    private void rdbrDetalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbrDetalleActionPerformed

        // CONSULTA DETALLADA DE PRODUCTOR
        JOptionPane.showMessageDialog(null, "EN DESARROLLO.","CONSULTA DE PRODUCTOR",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_rdbrDetalleActionPerformed

    private void tfBuscarProductorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfBuscarProductorKeyReleased

        mostrarProductores(tfBuscarProductor.getText());
        ocultarColumnas();
        
    }//GEN-LAST:event_tfBuscarProductorKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private rojeru_san.RSPanelShadow rSPanelShadow1;
    private rojeru_san.RSPanelShadow rSPanelShadow2;
    private rojeru_san.RSButtonRiple rdbrDetalle;
    private rojeru_san.RSButtonRiple rdbrEliminar;
    private rojeru_san.RSButtonRiple rdbrModificar;
    private rojeru_san.RSButtonRiple rdbrRegistrar3;
    private rojeru_san.RSButtonRiple rsbrSalir;
    public static javax.swing.JTable tProductores;
    public javax.swing.JTextField tfBuscarProductor;
    // End of variables declaration//GEN-END:variables
}
